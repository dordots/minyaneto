apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 26
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId "com.app.minyaneto_android"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName "0.0.1"
        multiDexEnabled true
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "default"
    productFlavors {
        staging {
            applicationIdSuffix ".staging"
            versionNameSuffix "-staging"
        }
        production {
            applicationIdSuffix ".production"
        }
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }
}

dependencies {
    implementation "com.android.support:appcompat-v7:$rootProject.ext.supportLibVersion"
    implementation "com.android.support.constraint:constraint-layout:1.0.2"
    implementation "com.android.support:design:$rootProject.ext.supportLibVersion"
    implementation "com.android.support:support-v4:$rootProject.ext.supportLibVersion"
    implementation "com.android.support:cardview-v7:$rootProject.ext.supportLibVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.ext.supportLibVersion"
    implementation "com.google.android.gms:play-services-location:$rootProject.ext.playServicesVersion"
    implementation "com.google.android.gms:play-services-maps:$rootProject.ext.playServicesVersion"
    implementation "com.google.android.gms:play-services-places:$rootProject.ext.playServicesVersion"
    implementation 'commons-io:commons-io:2.5'
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.7.3'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.7.3'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.7.3'
    implementation files('libs/zmanim-1.4.0alpha.jar')
    implementation 'android.arch.lifecycle:extensions:1.0.0'
    implementation 'testfairy:testfairy-android-sdk:1.5.7@aar'
    implementation 'com.jakewharton.timber:timber:4.5.1'


    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:$rootProject.ext.mockitoVersion"
    testImplementation "org.hamcrest:hamcrest-all:$rootProject.ext.hamcrestVersion"
    testImplementation "android.arch.core:core-testing:1.0.0"
    testImplementation "org.robolectric:robolectric:3.5.1"
    compile('com.crashlytics.sdk.android:crashlytics:2.9.1@aar') {
        transitive = true
    }

}

static def downloadJarsToLibs(fileName, url) {
    def f = new File('app\\libs\\' + fileName)
    if (!f.exists()) {
        new URL(url).withInputStream { i -> f.withOutputStream { it << i } }
    }
}

task downloadHostedJars() {
    new File("app/libs").mkdirs()
    def jars = ['zmanim-1.4.0alpha.jar': 'https://github.com/KosherJava/zmanim/raw/master/lib/zmanim-1.4.0alpha.jar'
    ]
    jars.each { fn, url -> downloadJarsToLibs(fn, url) }
}
